name: Security Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC to catch new vulnerabilities
    - cron: '0 2 * * *'

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-security-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-security-
          ${{ runner.os }}-cargo-
    
    - name: Install cargo-audit
      run: cargo install --force cargo-audit
    
    - name: Run cargo audit
      run: cargo audit --color=always
      continue-on-error: false
    
    - name: Run cargo clippy (security lints)
      run: |
        cargo clippy --all-targets --all-features -- \
          -W clippy::suspicious \
          -W clippy::complexity \
          -W clippy::perf \
          -W clippy::cargo \
          -D warnings
      continue-on-error: false
    
    - name: Check for secret leaks
      run: |
        echo "Checking for potential secret leaks..."
        # Check for common secret patterns
        if grep -r --include="*.rs" --include="*.toml" --include="*.yml" --include="*.yaml" \
               -E "(password|secret|key|token).*=.*['\"][^'\"]{10,}['\"]" .; then
          echo "❌ Potential secrets found in code!"
          exit 1
        else
          echo "✅ No obvious secrets found in code"
        fi
    
    - name: Validate environment variable usage
      run: |
        echo "Checking for direct environment variable access..."
        # Flag direct env::var usage that should use configuration management
        if grep -r --include="*.rs" "std::env::var\|env::var" . | grep -v "test\|example"; then
          echo "⚠️ Direct environment variable access found - consider using configuration management"
        else
          echo "✅ No direct environment variable access found"
        fi

  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    
    - name: Run cargo deny
      uses: EmbarkStudios/cargo-deny-action@v1
      with:
        log-level: warn
        command: check
        arguments: --all-features
        command-arguments: --show-stats
        manifest-path: ./Cargo.toml